<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="ILAK.API.ListOfIntfGenOption" name="IntfOptions" #>  
using System.Collections.Generic;
namespace TempRestHostService
{
	<# foreach (var item in IntfOptions.Interfaces) { #>
    public class <#= "Controller" + item.IntfCode #>
    {
	    <# foreach(var mitem in item.Methods) {#>
        public RetBase<dynamic> <#= "Do" + mitem.MCode #>(<#= "Req"+mitem.MAgOption.AgCode #> ags)
		{
		    //数据库类型 代码生成处
			<#
			    string dbType = item.ConnOption.DbType;
				string convertedDbType = "SqlSugar.DbType.SqlServer";
				switch(dbType)
				{
					case "MSSql" : convertedDbType = "SqlSugar.DbType.SqlServer"; break;
					case "Oracle*" : break;
					case "Cache*" : break;
					default :break;
				}
			#>
            SqlSugar.DbType dbtype = <#= convertedDbType #>;
            //连接字符串 代码生成处
            string connStr = "<#= item.ConnOption.ConnString #>";
            //查询语句 - 带参数 代码生成处 MSqlStmt
            string sqlstmt = @"<#= mitem.MSqlStmt #>";

            List<SqlSugar.SugarParameter> paras = new List<SqlSugar.SugarParameter>();
            Dictionary<string,object> paranames = PropertyUtil.GetPropertyName(ags);
            foreach(string item in paranames.Keys)
            {
                SqlSugar.SugarParameter sp = new SqlSugar.SugarParameter(item, paranames[item]);
                paras.Add(sp);
            }

            var data = SqlSugarUtils.QueryData(connStr, dbtype, sqlstmt, paras);

            RetBase<dynamic> ret = new RetBase<dynamic>
            {
                data = data
            };
            //ret.pager = ags.Pager == null ? Pager.Default() : ags.Pager;

            return ret;
		}
		<#} #>
    }
	<# } #>
}