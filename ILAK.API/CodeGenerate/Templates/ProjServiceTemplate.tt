<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter name="ProjCode" type="System.string" #>
<#@ parameter type="ILAK.API.ProjGenOptions" name="ProjOption" #>  
using System.ServiceModel;
using System.ServiceProcess;

namespace TempRestHostService
{
    [ServiceBehavior(ConcurrencyMode = ConcurrencyMode.Multiple)]
    public partial class ProjService<#= ProjCode #> : ServiceBase
    {
        public ProjService<#= ProjCode #>()
        {
            InitializeComponent();
        }
		<# foreach (var item in ProjOption.Interfaces) { #>
        private static ServiceHost servHost<#= item.IntfCode #> = null;
		<# } #>
        protected override void OnStart(string[] args)
        {
			<# foreach (var item in ProjOption.Interfaces) { #>
            servHost<#= item.IntfCode #> = new ServiceHost(typeof(Service<#= item.IntfCode #>));
            servHost<#= item.IntfCode #>.Open();
			<# } #>
        }

        protected override void OnStop()
        {
		    <# foreach (var item in ProjOption.Interfaces) { #>
            if (servHost<#= item.IntfCode #> != null) servHost<#= item.IntfCode #>.Close();
			<# } #>
        }
    }
}
